\documentclass{beamer}
\usepackage[sc]{mathpazo}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\setcounter{secnumdepth}{2}
\setcounter{tocdepth}{2}
\usepackage{url}
\usepackage{fancyvrb}

\begin{document}

\title{Repo Activity analyzes}
\author{a small hackathon team}

\begin{frame}
  \titlepage
\end{frame}

<<setup, include=FALSE>>=
library(knitr)
library(ggplot2)
library(timeSeries)
opts_chunk$set(fig.path='figure/minimal-', fig.align='center', fig.show='hold')

set.seed(1121)
options(formatR.arrow=TRUE,width=90)

source("calendarHeat.R")

agregatePerDay <- function(dates, values, f) {
   t = strptime(dates, format="%F %T %z")
   ts = timeSeries(values, t)
   by = timeSequence(from=start(ts), to=end(ts), by='day')
   timeSeries::aggregate(ts, by, f)
}

d = read.csv("data.csv", quote="'")
d$Time = strptime(d$Date, format="%F %T %z")
d = subset(d, Time > as.POSIXct("2015-01-01"))

# We could use many different data subsets, ie. for a GIT message tag or an
# author:
#auth  = subset(d, grepl("authPat", d$Author) | grepl("anotherPat", d$Author))

commits       = agregatePerDay(d$Date, d$Commit, length)
files         = agregatePerDay(d$Date, d$Files, sum)
removals      = agregatePerDay(d$Date, d$Delete, sum)
inserts       = agregatePerDay(d$Date, d$Insert, sum)

df = data.frame(time(commits), commits$TS.1, files$TS.1, inserts$TS.1, removals$TS.1)
names(df) <- c("time", "commits", "files", "inserts", "removals")
df$runInserts  = as.numeric(filter(df$inserts, rep(1/7,7), sides=2))
df$runRemovals = as.numeric(filter(df$removals, rep(1/7,7), sides=2))
calendarHeat(time(commits), commits, varname="Activity")
@


\begin{frame}
\frametitle{ Commits per day }
<<Commits, echo=FALSE, warning=FALSE, fig.width=10, fig.height=6, out.width='.95\\linewidth'>>=
calendarHeat(time(commits), commits, varname="Activity")
@
\end{frame}

\begin{frame}
\frametitle{Files per day}
<<Commits2, echo=FALSE, warning=FALSE, message=FALSE, fig.width=10, fig.height=6, out.width='.95\\linewidth'>>=
calendarHeat(time(files), files, varname="Proj Activity (Files)")
@
\end{frame}


\begin{frame}
\frametitle{ Contribute? }
Maybe we could do more analyzes, graphs and visualization? Would you like
joining the project?  \url{https://github.com/przemekr/git-graphs}
\end{frame}

\begin{frame}
\frametitle{Cululative sums}
<<cumulative, echo=FALSE, message=FALSE, warning=FALSE, fig.width=10, fig.height=6, out.width='.95\\linewidth'>>=
ggplot() + 
  geom_point(data = df, aes(x = time, y = cumsum(inserts), color = "Inserts"))  +
  geom_point(data = df, aes(x = time, y = cumsum(removals), color = "Removals"))  +
  stat_smooth(data = df, aes(x = time, y = cumsum(inserts))) +
  xlab('date') +
  ylab('cumulative sum, no of lines')
@
\end{frame}

\begin{frame}
\frametitle{Running avarages}
<<rolling, echo=FALSE, message=FALSE, warning=FALSE, fig.width=10, fig.height=6, out.width='.95\\linewidth'>>=
ggplot() + 
  geom_point(data = df, aes(x = time, y = runInserts, color = "Inserts"))  +
  geom_point(data = df, aes(x = time, y = runRemovals, color = "Removals"))  +
  stat_smooth(data = df, aes(x = time, y = runInserts)) +
  xlab('date') +
  ylab('7 days rolling avarage, no of lines')
@
\end{frame}

\begin{frame}
\frametitle{Commits per repo}
<<all_repos, echo=FALSE, warning=FALSE, fig.width=10, fig.height=6, out.width='.95\\linewidth'>>=
ggplot(data = d, aes(x = Time, y = Insert, color = Repo)) + 
  geom_point(alpha=0.5) +
  xlab('date') +
  ylab('all my repos') + scale_y_log10()
@
\end{frame}

\begin{frame}
\frametitle{Commits per repo}
<<all_repos2, echo=FALSE, warning=FALSE, fig.width=10, fig.height=6, out.width='.95\\linewidth'>>=
ggplot(data = d, aes(x = Time, y = Repo)) + 
  geom_jitter(alpha=0.5, aes(size = log(Insert), color = Repo), position = position_jitter(width = .2)) +
  xlab('date') +
  ylab('all my repos')
@
\end{frame}

\end{document}
